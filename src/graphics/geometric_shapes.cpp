
#include "geometric_shapes.hpp"
#include "math/align.hpp"

#include <array>

#pragma warning(disable : 4324) // structure was padded due to alignment specifier

namespace we::graphics {

namespace {
struct geometric_shapes_buffer {
   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 162> icosphere_vertices{
      {{0.000000f, -1.000000f, 0.000000f},
       {-0.203181f, -0.967950f, -0.147618f},
       {0.077607f, -0.967950f, -0.238853f},
       {-0.723607f, -0.447220f, -0.525725f},
       {-0.609547f, -0.657519f, -0.442856f},
       {-0.812729f, -0.502301f, -0.295238f},
       {0.251147f, -0.967949f, 0.000000f},
       {0.077607f, -0.967950f, 0.238853f},
       {-0.203181f, -0.967950f, 0.147618f},
       {-0.860698f, -0.251151f, -0.442858f},
       {0.276388f, -0.447220f, -0.850649f},
       {0.029639f, -0.502302f, -0.864184f},
       {0.155215f, -0.251152f, -0.955422f},
       {0.894426f, -0.447216f, 0.000000f},
       {0.831051f, -0.502299f, -0.238853f},
       {0.956626f, -0.251149f, -0.147618f},
       {0.276388f, -0.447220f, 0.850649f},
       {0.483971f, -0.502302f, 0.716565f},
       {0.436007f, -0.251152f, 0.864188f},
       {-0.723607f, -0.447220f, 0.525725f},
       {-0.531941f, -0.502302f, 0.681712f},
       {-0.687159f, -0.251152f, 0.681715f},
       {-0.687159f, -0.251152f, -0.681715f},
       {0.436007f, -0.251152f, -0.864188f},
       {0.956626f, -0.251149f, 0.147618f},
       {0.155215f, -0.251152f, 0.955422f},
       {-0.860698f, -0.251151f, 0.442858f},
       {-0.276388f, 0.447220f, -0.850649f},
       {-0.483971f, 0.502302f, -0.716565f},
       {-0.232822f, 0.657519f, -0.716563f},
       {0.723607f, 0.447220f, -0.525725f},
       {0.531941f, 0.502302f, -0.681712f},
       {0.609547f, 0.657519f, -0.442856f},
       {0.723607f, 0.447220f, 0.525725f},
       {0.812729f, 0.502301f, 0.295238f},
       {0.609547f, 0.657519f, 0.442856f},
       {-0.276388f, 0.447220f, 0.850649f},
       {-0.029639f, 0.502302f, 0.864184f},
       {-0.232822f, 0.657519f, 0.716563f},
       {-0.894426f, 0.447216f, 0.000000f},
       {-0.831051f, 0.502299f, 0.238853f},
       {-0.753442f, 0.657515f, 0.000000f},
       {-0.251147f, 0.967949f, 0.000000f},
       {-0.077607f, 0.967950f, 0.238853f},
       {0.000000f, 1.000000f, 0.000000f},
       {-0.525730f, 0.850652f, 0.000000f},
       {-0.361800f, 0.894429f, 0.262863f},
       {-0.638194f, 0.723610f, 0.262864f},
       {-0.162456f, 0.850654f, 0.499995f},
       {-0.447209f, 0.723612f, 0.525728f},
       {-0.688189f, 0.525736f, 0.499997f},
       {-0.483971f, 0.502302f, 0.716565f},
       {0.203181f, 0.967950f, 0.147618f},
       {0.138197f, 0.894430f, 0.425319f},
       {0.052790f, 0.723612f, 0.688185f},
       {0.425323f, 0.850654f, 0.309011f},
       {0.361804f, 0.723612f, 0.587778f},
       {0.262869f, 0.525738f, 0.809012f},
       {0.531941f, 0.502302f, 0.681712f},
       {0.203181f, 0.967950f, -0.147618f},
       {0.447210f, 0.894429f, 0.000000f},
       {0.670817f, 0.723611f, 0.162457f},
       {0.425323f, 0.850654f, -0.309011f},
       {0.670817f, 0.723611f, -0.162457f},
       {0.850648f, 0.525736f, 0.000000f},
       {0.812729f, 0.502301f, -0.295238f},
       {-0.077607f, 0.967950f, -0.238853f},
       {0.138197f, 0.894430f, -0.425319f},
       {0.361804f, 0.723612f, -0.587778f},
       {-0.162456f, 0.850654f, -0.499995f},
       {0.052790f, 0.723612f, -0.688185f},
       {0.262869f, 0.525738f, -0.809012f},
       {-0.029639f, 0.502302f, -0.864184f},
       {-0.361800f, 0.894429f, -0.262863f},
       {-0.447209f, 0.723612f, -0.525728f},
       {-0.638194f, 0.723610f, -0.262864f},
       {-0.688189f, 0.525736f, -0.499997f},
       {-0.831051f, 0.502299f, -0.238853f},
       {-0.956626f, 0.251149f, 0.147618f},
       {-0.951058f, 0.000000f, 0.309013f},
       {-0.861804f, 0.276396f, 0.425322f},
       {-0.809019f, 0.000000f, 0.587782f},
       {-0.670821f, 0.276397f, 0.688189f},
       {-0.587786f, -0.000000f, 0.809017f},
       {-0.436007f, 0.251152f, 0.864188f},
       {-0.155215f, 0.251152f, 0.955422f},
       {0.000000f, 0.000000f, 1.000000f},
       {0.138199f, 0.276397f, 0.951055f},
       {0.309016f, -0.000000f, 0.951057f},
       {0.447215f, 0.276397f, 0.850649f},
       {0.587786f, -0.000000f, 0.809017f},
       {0.687159f, 0.251152f, 0.681715f},
       {0.860698f, 0.251151f, 0.442858f},
       {0.951058f, 0.000000f, 0.309013f},
       {0.947213f, 0.276396f, 0.162458f},
       {1.000000f, 0.000001f, -0.000000f},
       {0.947213f, 0.276397f, -0.162458f},
       {0.951058f, -0.000000f, -0.309013f},
       {0.860698f, 0.251151f, -0.442858f},
       {0.687159f, 0.251152f, -0.681715f},
       {0.587786f, 0.000000f, -0.809017f},
       {0.447216f, 0.276397f, -0.850648f},
       {0.309017f, -0.000001f, -0.951056f},
       {0.138199f, 0.276397f, -0.951055f},
       {0.000000f, -0.000000f, -1.000000f},
       {-0.155215f, 0.251152f, -0.955422f},
       {-0.436007f, 0.251152f, -0.864188f},
       {-0.587786f, 0.000000f, -0.809017f},
       {-0.670820f, 0.276396f, -0.688190f},
       {-0.809019f, -0.000002f, -0.587783f},
       {-0.861804f, 0.276394f, -0.425323f},
       {-0.951058f, -0.000000f, -0.309013f},
       {-0.956626f, 0.251149f, -0.147618f},
       {-0.309017f, -0.000000f, 0.951056f},
       {-0.447216f, -0.276398f, 0.850648f},
       {-0.138199f, -0.276398f, 0.951055f},
       {-0.262869f, -0.525738f, 0.809012f},
       {0.029639f, -0.502302f, 0.864184f},
       {0.809018f, -0.000000f, 0.587783f},
       {0.670819f, -0.276397f, 0.688191f},
       {0.861803f, -0.276396f, 0.425324f},
       {0.688189f, -0.525736f, 0.499997f},
       {0.831051f, -0.502299f, 0.238853f},
       {0.809018f, 0.000000f, -0.587783f},
       {0.861803f, -0.276396f, -0.425324f},
       {0.670819f, -0.276397f, -0.688191f},
       {0.688189f, -0.525736f, -0.499997f},
       {0.483971f, -0.502302f, -0.716565f},
       {-0.309017f, 0.000000f, -0.951056f},
       {-0.138199f, -0.276398f, -0.951055f},
       {-0.447216f, -0.276398f, -0.850648f},
       {-0.262869f, -0.525738f, -0.809012f},
       {-0.531941f, -0.502302f, -0.681712f},
       {-1.000000f, 0.000000f, 0.000000f},
       {-0.947213f, -0.276396f, -0.162458f},
       {-0.947213f, -0.276396f, 0.162458f},
       {-0.850648f, -0.525736f, 0.000000f},
       {-0.812729f, -0.502301f, 0.295238f},
       {-0.609547f, -0.657519f, 0.442856f},
       {-0.425323f, -0.850654f, 0.309011f},
       {-0.361803f, -0.723612f, 0.587779f},
       {-0.138197f, -0.894429f, 0.425321f},
       {-0.052789f, -0.723611f, 0.688186f},
       {0.162456f, -0.850654f, 0.499995f},
       {0.232822f, -0.657519f, 0.716563f},
       {0.447211f, -0.723612f, 0.525727f},
       {0.361801f, -0.894429f, 0.262863f},
       {0.638195f, -0.723609f, 0.262863f},
       {0.525730f, -0.850652f, 0.000000f},
       {0.753442f, -0.657515f, 0.000000f},
       {0.638195f, -0.723609f, -0.262864f},
       {0.361801f, -0.894428f, -0.262864f},
       {0.447211f, -0.723610f, -0.525729f},
       {0.162456f, -0.850654f, -0.499995f},
       {0.232822f, -0.657519f, -0.716563f},
       {-0.670817f, -0.723611f, 0.162457f},
       {-0.670818f, -0.723610f, -0.162458f},
       {-0.447211f, -0.894428f, -0.000001f},
       {-0.425323f, -0.850654f, -0.309011f},
       {-0.052790f, -0.723612f, -0.688185f},
       {-0.138199f, -0.894429f, -0.425321f},
       {-0.361805f, -0.723611f, -0.587779f}}};

   alignas(gpu::raw_uav_srv_byte_alignment)
      const std::array<std::array<uint16, 3>, 320> icosphere_indices = {
         {{0, 1, 2},       {3, 4, 5},       {0, 2, 6},       {0, 6, 7},
          {0, 7, 8},       {3, 5, 9},       {10, 11, 12},    {13, 14, 15},
          {16, 17, 18},    {19, 20, 21},    {3, 9, 22},      {10, 12, 23},
          {13, 15, 24},    {16, 18, 25},    {19, 21, 26},    {27, 28, 29},
          {30, 31, 32},    {33, 34, 35},    {36, 37, 38},    {39, 40, 41},
          {42, 43, 44},    {45, 46, 42},    {41, 47, 45},    {42, 46, 43},
          {46, 48, 43},    {45, 47, 46},    {47, 49, 46},    {46, 49, 48},
          {49, 38, 48},    {41, 40, 47},    {40, 50, 47},    {47, 50, 49},
          {50, 51, 49},    {49, 51, 38},    {51, 36, 38},    {43, 52, 44},
          {48, 53, 43},    {38, 54, 48},    {43, 53, 52},    {53, 55, 52},
          {48, 54, 53},    {54, 56, 53},    {53, 56, 55},    {56, 35, 55},
          {38, 37, 54},    {37, 57, 54},    {54, 57, 56},    {57, 58, 56},
          {56, 58, 35},    {58, 33, 35},    {52, 59, 44},    {55, 60, 52},
          {35, 61, 55},    {52, 60, 59},    {60, 62, 59},    {55, 61, 60},
          {61, 63, 60},    {60, 63, 62},    {63, 32, 62},    {35, 34, 61},
          {34, 64, 61},    {61, 64, 63},    {64, 65, 63},    {63, 65, 32},
          {65, 30, 32},    {59, 66, 44},    {62, 67, 59},    {32, 68, 62},
          {59, 67, 66},    {67, 69, 66},    {62, 68, 67},    {68, 70, 67},
          {67, 70, 69},    {70, 29, 69},    {32, 31, 68},    {31, 71, 68},
          {68, 71, 70},    {71, 72, 70},    {70, 72, 29},    {72, 27, 29},
          {66, 42, 44},    {69, 73, 66},    {29, 74, 69},    {66, 73, 42},
          {73, 45, 42},    {69, 74, 73},    {74, 75, 73},    {73, 75, 45},
          {75, 41, 45},    {29, 28, 74},    {28, 76, 74},    {74, 76, 75},
          {76, 77, 75},    {75, 77, 41},    {77, 39, 41},    {78, 40, 39},
          {79, 80, 78},    {26, 81, 79},    {78, 80, 40},    {80, 50, 40},
          {79, 81, 80},    {81, 82, 80},    {80, 82, 50},    {82, 51, 50},
          {26, 21, 81},    {21, 83, 81},    {81, 83, 82},    {83, 84, 82},
          {82, 84, 51},    {84, 36, 51},    {85, 37, 36},    {86, 87, 85},
          {25, 88, 86},    {85, 87, 37},    {87, 57, 37},    {86, 88, 87},
          {88, 89, 87},    {87, 89, 57},    {89, 58, 57},    {25, 18, 88},
          {18, 90, 88},    {88, 90, 89},    {90, 91, 89},    {89, 91, 58},
          {91, 33, 58},    {92, 34, 33},    {93, 94, 92},    {24, 95, 93},
          {92, 94, 34},    {94, 64, 34},    {93, 95, 94},    {95, 96, 94},
          {94, 96, 64},    {96, 65, 64},    {24, 15, 95},    {15, 97, 95},
          {95, 97, 96},    {97, 98, 96},    {96, 98, 65},    {98, 30, 65},
          {99, 31, 30},    {100, 101, 99},  {23, 102, 100},  {99, 101, 31},
          {101, 71, 31},   {100, 102, 101}, {102, 103, 101}, {101, 103, 71},
          {103, 72, 71},   {23, 12, 102},   {12, 104, 102},  {102, 104, 103},
          {104, 105, 103}, {103, 105, 72},  {105, 27, 72},   {106, 28, 27},
          {107, 108, 106}, {22, 109, 107},  {106, 108, 28},  {108, 76, 28},
          {107, 109, 108}, {109, 110, 108}, {108, 110, 76},  {110, 77, 76},
          {22, 9, 109},    {9, 111, 109},   {109, 111, 110}, {111, 112, 110},
          {110, 112, 77},  {112, 39, 77},   {84, 85, 36},    {83, 113, 84},
          {21, 114, 83},   {84, 113, 85},   {113, 86, 85},   {83, 114, 113},
          {114, 115, 113}, {113, 115, 86},  {115, 25, 86},   {21, 20, 114},
          {20, 116, 114},  {114, 116, 115}, {116, 117, 115}, {115, 117, 25},
          {117, 16, 25},   {91, 92, 33},    {90, 118, 91},   {18, 119, 90},
          {91, 118, 92},   {118, 93, 92},   {90, 119, 118},  {119, 120, 118},
          {118, 120, 93},  {120, 24, 93},   {18, 17, 119},   {17, 121, 119},
          {119, 121, 120}, {121, 122, 120}, {120, 122, 24},  {122, 13, 24},
          {98, 99, 30},    {97, 123, 98},   {15, 124, 97},   {98, 123, 99},
          {123, 100, 99},  {97, 124, 123},  {124, 125, 123}, {123, 125, 100},
          {125, 23, 100},  {15, 14, 124},   {14, 126, 124},  {124, 126, 125},
          {126, 127, 125}, {125, 127, 23},  {127, 10, 23},   {105, 106, 27},
          {104, 128, 105}, {12, 129, 104},  {105, 128, 106}, {128, 107, 106},
          {104, 129, 128}, {129, 130, 128}, {128, 130, 107}, {130, 22, 107},
          {12, 11, 129},   {11, 131, 129},  {129, 131, 130}, {131, 132, 130},
          {130, 132, 22},  {132, 3, 22},    {112, 78, 39},   {111, 133, 112},
          {9, 134, 111},   {112, 133, 78},  {133, 79, 78},   {111, 134, 133},
          {134, 135, 133}, {133, 135, 79},  {135, 26, 79},   {9, 5, 134},
          {5, 136, 134},   {134, 136, 135}, {136, 137, 135}, {135, 137, 26},
          {137, 19, 26},   {138, 20, 19},   {139, 140, 138}, {8, 141, 139},
          {138, 140, 20},  {140, 116, 20},  {139, 141, 140}, {141, 142, 140},
          {140, 142, 116}, {142, 117, 116}, {8, 7, 141},     {7, 143, 141},
          {141, 143, 142}, {143, 144, 142}, {142, 144, 117}, {144, 16, 117},
          {144, 17, 16},   {143, 145, 144}, {7, 146, 143},   {144, 145, 17},
          {145, 121, 17},  {143, 146, 145}, {146, 147, 145}, {145, 147, 121},
          {147, 122, 121}, {7, 6, 146},     {6, 148, 146},   {146, 148, 147},
          {148, 149, 147}, {147, 149, 122}, {149, 13, 122},  {149, 14, 13},
          {148, 150, 149}, {6, 151, 148},   {149, 150, 14},  {150, 126, 14},
          {148, 151, 150}, {151, 152, 150}, {150, 152, 126}, {152, 127, 126},
          {6, 2, 151},     {2, 153, 151},   {151, 153, 152}, {153, 154, 152},
          {152, 154, 127}, {154, 10, 127},  {137, 138, 19},  {136, 155, 137},
          {5, 156, 136},   {137, 155, 138}, {155, 139, 138}, {136, 156, 155},
          {156, 157, 155}, {155, 157, 139}, {157, 8, 139},   {5, 4, 156},
          {4, 158, 156},   {156, 158, 157}, {158, 1, 157},   {157, 1, 8},
          {1, 0, 8},       {154, 11, 10},   {153, 159, 154}, {2, 160, 153},
          {154, 159, 11},  {159, 131, 11},  {153, 160, 159}, {160, 161, 159},
          {159, 161, 131}, {161, 132, 131}, {2, 1, 160},     {1, 158, 160},
          {160, 158, 161}, {158, 4, 161},   {161, 4, 132},   {4, 3, 132}}};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 66> cylinder_vertices{
      {{0.000000f, -1.000000f, 0.000000f},
       {0.000000f, -1.000000f, 1.000000f},
       {-0.195090f, -1.000000f, 0.980785f},
       {0.000000f, 1.000000f, 0.000000f},
       {-0.195090f, 1.000000f, 0.980785f},
       {0.000000f, 1.000000f, 1.000000f},
       {-0.382683f, -1.000000f, 0.923880f},
       {-0.382683f, 1.000000f, 0.923880f},
       {-0.555570f, -1.000000f, 0.831470f},
       {-0.555570f, 1.000000f, 0.831470f},
       {-0.707107f, -1.000000f, 0.707107f},
       {-0.707107f, 1.000000f, 0.707107f},
       {-0.831470f, -1.000000f, 0.555570f},
       {-0.831470f, 1.000000f, 0.555570f},
       {-0.923880f, -1.000000f, 0.382683f},
       {-0.923880f, 1.000000f, 0.382683f},
       {-0.980785f, -1.000000f, 0.195090f},
       {-0.980785f, 1.000000f, 0.195090f},
       {-1.000000f, -1.000000f, 0.000000f},
       {-1.000000f, 1.000000f, 0.000000f},
       {-0.980785f, -1.000000f, -0.195090f},
       {-0.980785f, 1.000000f, -0.195090f},
       {-0.923880f, -1.000000f, -0.382683f},
       {-0.923880f, 1.000000f, -0.382683f},
       {-0.831470f, -1.000000f, -0.555570f},
       {-0.831470f, 1.000000f, -0.555570f},
       {-0.707107f, -1.000000f, -0.707107f},
       {-0.707107f, 1.000000f, -0.707107f},
       {-0.555570f, -1.000000f, -0.831470f},
       {-0.555570f, 1.000000f, -0.831470f},
       {-0.382683f, -1.000000f, -0.923880f},
       {-0.382683f, 1.000000f, -0.923880f},
       {-0.195090f, -1.000000f, -0.980785f},
       {-0.195090f, 1.000000f, -0.980785f},
       {0.000000f, -1.000000f, -1.000000f},
       {0.000000f, 1.000000f, -1.000000f},
       {0.195091f, -1.000000f, -0.980785f},
       {0.195091f, 1.000000f, -0.980785f},
       {0.382684f, -1.000000f, -0.923879f},
       {0.382684f, 1.000000f, -0.923879f},
       {0.555571f, -1.000000f, -0.831469f},
       {0.555571f, 1.000000f, -0.831469f},
       {0.707107f, -1.000000f, -0.707106f},
       {0.707107f, 1.000000f, -0.707106f},
       {0.831470f, -1.000000f, -0.555570f},
       {0.831470f, 1.000000f, -0.555570f},
       {0.923880f, -1.000000f, -0.382683f},
       {0.923880f, 1.000000f, -0.382683f},
       {0.980785f, -1.000000f, -0.195089f},
       {0.980785f, 1.000000f, -0.195089f},
       {1.000000f, -1.000000f, 0.000001f},
       {1.000000f, 1.000000f, 0.000001f},
       {0.980785f, -1.000000f, 0.195091f},
       {0.980785f, 1.000000f, 0.195091f},
       {0.923879f, -1.000000f, 0.382684f},
       {0.923879f, 1.000000f, 0.382684f},
       {0.831469f, -1.000000f, 0.555571f},
       {0.831469f, 1.000000f, 0.555571f},
       {0.707106f, -1.000000f, 0.707108f},
       {0.707106f, 1.000000f, 0.707108f},
       {0.555569f, -1.000000f, 0.831470f},
       {0.555569f, 1.000000f, 0.831470f},
       {0.382682f, -1.000000f, 0.923880f},
       {0.382682f, 1.000000f, 0.923880f},
       {0.195089f, -1.000000f, 0.980786f},
       {0.195089f, 1.000000f, 0.980786f}}};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<std::array<uint16, 3>, 128> cylinder_indices{
      {{0, 1, 2},    {3, 4, 5},    {5, 2, 1},    {0, 2, 6},    {3, 7, 4},
       {4, 6, 2},    {0, 6, 8},    {3, 9, 7},    {7, 8, 6},    {0, 8, 10},
       {3, 11, 9},   {9, 10, 8},   {0, 10, 12},  {3, 13, 11},  {11, 12, 10},
       {0, 12, 14},  {3, 15, 13},  {13, 14, 12}, {0, 14, 16},  {3, 17, 15},
       {15, 16, 14}, {0, 16, 18},  {3, 19, 17},  {17, 18, 16}, {0, 18, 20},
       {3, 21, 19},  {19, 20, 18}, {0, 20, 22},  {3, 23, 21},  {21, 22, 20},
       {0, 22, 24},  {3, 25, 23},  {23, 24, 22}, {0, 24, 26},  {3, 27, 25},
       {25, 26, 24}, {0, 26, 28},  {3, 29, 27},  {27, 28, 26}, {0, 28, 30},
       {3, 31, 29},  {29, 30, 28}, {0, 30, 32},  {3, 33, 31},  {31, 32, 30},
       {0, 32, 34},  {3, 35, 33},  {33, 34, 32}, {0, 34, 36},  {3, 37, 35},
       {35, 36, 34}, {0, 36, 38},  {3, 39, 37},  {37, 38, 36}, {0, 38, 40},
       {3, 41, 39},  {39, 40, 38}, {0, 40, 42},  {3, 43, 41},  {41, 42, 40},
       {0, 42, 44},  {3, 45, 43},  {43, 44, 42}, {0, 44, 46},  {3, 47, 45},
       {45, 46, 44}, {0, 46, 48},  {3, 49, 47},  {47, 48, 46}, {0, 48, 50},
       {3, 51, 49},  {49, 50, 48}, {0, 50, 52},  {3, 53, 51},  {51, 52, 50},
       {0, 52, 54},  {3, 55, 53},  {53, 54, 52}, {0, 54, 56},  {3, 57, 55},
       {55, 56, 54}, {0, 56, 58},  {3, 59, 57},  {57, 58, 56}, {0, 58, 60},
       {3, 61, 59},  {59, 60, 58}, {0, 60, 62},  {3, 63, 61},  {61, 62, 60},
       {0, 62, 64},  {3, 65, 63},  {63, 64, 62}, {0, 64, 1},   {3, 5, 65},
       {65, 1, 64},  {5, 4, 2},    {4, 7, 6},    {7, 9, 8},    {9, 11, 10},
       {11, 13, 12}, {13, 15, 14}, {15, 17, 16}, {17, 19, 18}, {19, 21, 20},
       {21, 23, 22}, {23, 25, 24}, {25, 27, 26}, {27, 29, 28}, {29, 31, 30},
       {31, 33, 32}, {33, 35, 34}, {35, 37, 36}, {37, 39, 38}, {39, 41, 40},
       {41, 43, 42}, {43, 45, 44}, {45, 47, 46}, {47, 49, 48}, {49, 51, 50},
       {51, 53, 52}, {53, 55, 54}, {55, 57, 56}, {57, 59, 58}, {59, 61, 60},
       {61, 63, 62}, {63, 65, 64}, {65, 5, 1}}};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 64> alt_cylinder_vertices{{
      {0.0, 1.0, 1.0},
      {-0.9238795042037964, -1.0, 0.3826834559440613},
      {-0.8314695954322815, -1.0, 0.5555702447891235},
      {-0.7071067690849304, -1.0, 0.7071067690849304},
      {1.0, 1.0, 0.0},
      {-0.5555702447891235, -1.0, 0.8314695954322815},
      {-0.3826834559440613, -1.0, 0.9238795042037964},
      {-0.19509032368659973, -1.0, 0.9807852506637573},
      {0.7071067690849304, -1.0, -0.7071067690849304},
      {0.5555702447891235, -1.0, -0.8314695954322815},
      {0.3826834559440613, -1.0, -0.9238795042037964},
      {0.19509032368659973, -1.0, -0.9807852506637573},
      {-0.19509032368659973, -1.0, -0.9807852506637573},
      {-0.3826834559440613, -1.0, -0.9238795042037964},
      {-0.5555702447891235, -1.0, -0.8314695954322815},
      {-0.7071067690849304, -1.0, -0.7071067690849304},
      {-0.8314695954322815, -1.0, -0.5555702447891235},
      {-0.9238795042037964, -1.0, -0.3826834559440613},
      {-1.0, 1.0, 0.0},
      {0.0, -1.0, -1.0},
      {0.3826834559440613, -1.0, 0.9238795042037964},
      {0.19509032368659973, -1.0, 0.9807852506637573},
      {0.5555702447891235, -1.0, 0.8314695954322815},
      {0.7071067690849304, -1.0, 0.7071067690849304},
      {0.8314695954322815, -1.0, 0.5555702447891235},
      {0.9238795042037964, -1.0, 0.3826834559440613},
      {0.9807852506637573, -1.0, 0.19509032368659973},
      {0.9807852506637573, -1.0, -0.19509032368659973},
      {0.9238795042037964, -1.0, -0.3826834559440613},
      {0.8314695954322815, -1.0, -0.5555702447891235},
      {-0.9238795042037964, 1.0, -0.3826834559440613},
      {-0.9807852506637573, 1.0, -0.19509032368659973},
      {-0.9807852506637573, 1.0, 0.19509032368659973},
      {-0.9238795042037964, 1.0, 0.3826834559440613},
      {-0.8314695954322815, 1.0, 0.5555702447891235},
      {-0.7071067690849304, 1.0, 0.7071067690849304},
      {-0.9807852506637573, -1.0, -0.19509032368659973},
      {-0.9807852506637573, -1.0, 0.19509032368659973},
      {-1.0, -1.0, 0.0},
      {0.19509032368659973, 1.0, 0.9807852506637573},
      {0.3826834559440613, 1.0, 0.9238795042037964},
      {0.5555702447891235, 1.0, 0.8314695954322815},
      {0.7071067690849304, 1.0, 0.7071067690849304},
      {0.8314695954322815, 1.0, 0.5555702447891235},
      {0.9238795042037964, 1.0, 0.3826834559440613},
      {0.9807852506637573, 1.0, 0.19509032368659973},
      {0.9807852506637573, 1.0, -0.19509032368659973},
      {0.9238795042037964, 1.0, -0.3826834559440613},
      {0.8314695954322815, 1.0, -0.5555702447891235},
      {0.0, 1.0, -1.0},
      {-0.5555702447891235, 1.0, 0.8314695954322815},
      {-0.3826834559440613, 1.0, 0.9238795042037964},
      {-0.19509032368659973, 1.0, 0.9807852506637573},
      {1.0, -1.0, 0.0},
      {0.7071067690849304, 1.0, -0.7071067690849304},
      {0.5555702447891235, 1.0, -0.8314695954322815},
      {0.3826834559440613, 1.0, -0.9238795042037964},
      {0.19509032368659973, 1.0, -0.9807852506637573},
      {-0.19509032368659973, 1.0, -0.9807852506637573},
      {-0.3826834559440613, 1.0, -0.9238795042037964},
      {-0.5555702447891235, 1.0, -0.8314695954322815},
      {-0.7071067690849304, 1.0, -0.7071067690849304},
      {-0.8314695954322815, 1.0, -0.5555702447891235},
      {0.0, -1.0, 1.0},
   }};

   alignas(gpu::raw_uav_srv_byte_alignment)
      const std::array<std::array<uint16, 3>, 128> alt_cylinder_indices{{
         {39, 0, 63},  {21, 39, 63}, {40, 39, 21}, {20, 40, 21}, {41, 40, 20},
         {22, 41, 20}, {42, 41, 22}, {23, 42, 22}, {43, 42, 23}, {24, 43, 23},
         {44, 43, 24}, {25, 44, 24}, {45, 44, 25}, {26, 45, 25}, {4, 45, 26},
         {53, 4, 26},  {46, 4, 53},  {27, 46, 53}, {47, 46, 27}, {28, 47, 27},
         {48, 47, 28}, {29, 48, 28}, {54, 48, 29}, {8, 54, 29},  {55, 54, 8},
         {9, 55, 8},   {56, 55, 9},  {10, 56, 9},  {57, 56, 10}, {11, 57, 10},
         {49, 57, 11}, {19, 49, 11}, {58, 49, 19}, {12, 58, 19}, {59, 58, 12},
         {13, 59, 12}, {60, 59, 13}, {14, 60, 13}, {61, 60, 14}, {15, 61, 14},
         {62, 61, 15}, {16, 62, 15}, {30, 62, 16}, {17, 30, 16}, {31, 30, 17},
         {36, 31, 17}, {18, 31, 36}, {38, 18, 36}, {32, 18, 38}, {37, 32, 38},
         {33, 32, 37}, {1, 33, 37},  {34, 33, 1},  {2, 34, 1},   {35, 34, 2},
         {3, 35, 2},   {50, 35, 3},  {5, 50, 3},   {51, 50, 5},  {6, 51, 5},
         {0, 39, 40},  {51, 52, 0},  {35, 50, 51}, {33, 34, 35}, {18, 32, 33},
         {30, 31, 18}, {61, 62, 30}, {59, 60, 61}, {49, 58, 59}, {56, 57, 49},
         {54, 55, 56}, {47, 48, 54}, {4, 46, 47},  {44, 45, 4},  {42, 43, 44},
         {40, 41, 42}, {51, 0, 40},  {33, 35, 51}, {30, 18, 33}, {59, 61, 30},
         {56, 49, 59}, {47, 54, 56}, {44, 4, 47},  {40, 42, 44}, {33, 51, 40},
         {59, 30, 33}, {47, 56, 59}, {40, 44, 47}, {59, 33, 40}, {40, 47, 59},
         {52, 51, 6},  {7, 52, 6},   {0, 52, 7},   {63, 0, 7},   {21, 63, 7},
         {22, 20, 21}, {24, 23, 22}, {26, 25, 24}, {27, 53, 26}, {29, 28, 27},
         {9, 8, 29},   {11, 10, 9},  {12, 19, 11}, {14, 13, 12}, {16, 15, 14},
         {36, 17, 16}, {37, 38, 36}, {2, 1, 37},   {5, 3, 2},    {7, 6, 5},
         {22, 21, 7},  {26, 24, 22}, {29, 27, 26}, {11, 9, 29},  {14, 12, 11},
         {36, 16, 14}, {2, 37, 36},  {7, 5, 2},    {26, 22, 7},  {11, 29, 26},
         {36, 14, 11}, {7, 2, 36},   {11, 26, 7},  {7, 36, 11},
      }};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 8> cube_vertices{
      {{1.000000f, 1.000000f, 1.000000f},
       {-1.000000f, 1.000000f, -1.000000f},
       {-1.000000f, 1.000000f, 1.000000f},
       {1.000000f, -1.000000f, -1.000000f},
       {-1.000000f, -1.000000f, -1.000000f},
       {1.000000f, 1.000000f, -1.000000f},
       {1.000000f, -1.000000f, 1.000000f},
       {-1.000000f, -1.000000f, 1.000000f}}};

   alignas(gpu::raw_uav_srv_byte_alignment)
      const std::array<std::array<uint16, 3>, 12> cube_indices{{{0, 1, 2},
                                                                {1, 3, 4},
                                                                {5, 6, 3},
                                                                {7, 3, 6},
                                                                {2, 4, 7},
                                                                {0, 7, 6},
                                                                {0, 5, 1},
                                                                {1, 5, 3},
                                                                {5, 0, 6},
                                                                {7, 4, 3},
                                                                {2, 1, 4},
                                                                {0, 2, 7}}};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 6> octahedron_vertices{
      {{1.000000f, 0.000000f, 1.000000f},
       {0.000000f, 1.000000f, 0.000000f},
       {-1.000000f, 0.000000f, 1.000000f},
       {-1.000000f, 0.000000f, -1.000000f},
       {1.000000f, 0.000000f, -1.000000f},
       {0.000000f, -1.000000f, 0.000000f}}};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<std::array<uint16, 3>, 8> octahedron_indices{
      {{0, 1, 2}, {2, 1, 3}, {3, 1, 4}, {4, 1, 0}, {4, 5, 3}, {0, 5, 4}, {2, 5, 0}, {3, 5, 2}}};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 8> hint_hexahedron_vertices{
      {{0.000000f, 1.000000f, 1.000000f},
       {-0.866025f, 1.000000f, -0.500000f},
       {0.866025f, 1.000000f, -0.500000f},
       {0.000000f, 2.000000f, 0.000000f},
       {0.000000f, 1.000000f, 1.000000f},
       {0.866025f, 1.000000f, -0.500000f},
       {-0.866026f, 1.000000f, -0.500000f},
       {0.000000f, 0.000000f, -0.000000f}}};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<std::array<uint16, 3>, 6> hint_hexahedron_indices{
      {{0, 3, 1}, {1, 3, 2}, {2, 3, 0}, {4, 7, 5}, {5, 7, 6}, {6, 7, 4}}};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 33> cone_vertices = {{
      {0.0, -1.0, 1.0},
      {0.19509032368659973, -1.0, 0.9807852506637573},
      {0.3826834559440613, -1.0, 0.9238795042037964},
      {0.5555702447891235, -1.0, 0.8314695954322815},
      {0.7071067690849304, -1.0, 0.7071067690849304},
      {0.8314695954322815, -1.0, 0.5555702447891235},
      {0.9238795042037964, -1.0, 0.3826834559440613},
      {0.9807852506637573, -1.0, 0.19509032368659973},
      {1.0, -1.0, 0.0},
      {0.9807852506637573, -1.0, -0.19509032368659973},
      {0.9238795042037964, -1.0, -0.3826834559440613},
      {0.8314695954322815, -1.0, -0.5555702447891235},
      {0.7071067690849304, -1.0, -0.7071067690849304},
      {0.5555702447891235, -1.0, -0.8314695954322815},
      {0.3826834559440613, -1.0, -0.9238795042037964},
      {0.19509032368659973, -1.0, -0.9807852506637573},
      {0.0, -1.0, -1.0},
      {-0.19509032368659973, -1.0, -0.9807852506637573},
      {-0.3826834559440613, -1.0, -0.9238795042037964},
      {-0.5555702447891235, -1.0, -0.8314695954322815},
      {-0.7071067690849304, -1.0, -0.7071067690849304},
      {-0.8314695954322815, -1.0, -0.5555702447891235},
      {-0.9238795042037964, -1.0, -0.3826834559440613},
      {-0.9807852506637573, -1.0, -0.19509032368659973},
      {-1.0, -1.0, 0.0},
      {-0.9807852506637573, -1.0, 0.19509032368659973},
      {-0.9238795042037964, -1.0, 0.3826834559440613},
      {-0.8314695954322815, -1.0, 0.5555702447891235},
      {-0.7071067690849304, -1.0, 0.7071067690849304},
      {-0.5555702447891235, -1.0, 0.8314695954322815},
      {-0.3826834559440613, -1.0, 0.9238795042037964},
      {-0.19509032368659973, -1.0, 0.9807852506637573},
      {0.0, 1.0, 0.0},
   }};

   alignas(gpu::raw_uav_srv_byte_alignment)
      const std::array<std::array<uint16, 3>, 62> cone_indices = {{
         {1, 32, 0},   {2, 32, 1},   {3, 32, 2},   {4, 32, 3},   {5, 32, 4},
         {6, 32, 5},   {7, 32, 6},   {8, 32, 7},   {9, 32, 8},   {10, 32, 9},
         {11, 32, 10}, {12, 32, 11}, {13, 32, 12}, {14, 32, 13}, {15, 32, 14},
         {16, 32, 15}, {17, 32, 16}, {18, 32, 17}, {19, 32, 18}, {20, 32, 19},
         {21, 32, 20}, {22, 32, 21}, {23, 32, 22}, {24, 32, 23}, {25, 32, 24},
         {26, 32, 25}, {27, 32, 26}, {28, 32, 27}, {29, 32, 28}, {30, 32, 29},
         {31, 32, 30}, {0, 32, 31},  {1, 0, 31},   {3, 2, 1},    {5, 4, 3},
         {7, 6, 5},    {9, 8, 7},    {11, 10, 9},  {13, 12, 11}, {15, 14, 13},
         {17, 16, 15}, {19, 18, 17}, {21, 20, 19}, {23, 22, 21}, {25, 24, 23},
         {27, 26, 25}, {29, 28, 27}, {31, 30, 29}, {3, 1, 31},   {7, 5, 3},
         {11, 9, 7},   {15, 13, 11}, {19, 17, 15}, {23, 21, 19}, {27, 25, 23},
         {31, 29, 27}, {7, 3, 31},   {15, 11, 7},  {23, 19, 15}, {31, 27, 23},
         {15, 7, 31},  {31, 23, 15},
      }};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 6> ramp_vertices = {{
      {1.0, -1.0, 1.0},
      {1.0, -1.0, -1.0},
      {-1.0, 1.0, -1.0},
      {1.0, 1.0, -1.0},
      {-1.0, -1.0, 1.0},
      {-1.0, -1.0, -1.0},
   }};

   alignas(gpu::raw_uav_srv_byte_alignment)
      const std::array<std::array<uint16, 3>, 8> ramp_indices = {{
         {5, 4, 2},
         {4, 1, 0},
         {4, 5, 1},
         {1, 2, 3},
         {1, 5, 2},
         {4, 3, 2},
         {4, 0, 3},
         {3, 0, 1},
      }};

   alignas(gpu::raw_uav_srv_byte_alignment) const std::array<float3, 257> hemisphere_vertices = {{
      {0.0, 0.8314695954322815, 0.5555702447891235},
      {6.705522537231445e-08, 0.9238795042037964, 0.3826832175254822},
      {0.07465784251689911, 0.9238795042037964, 0.3753302991390228},
      {0.10838638246059418, 0.8314695954322815, 0.5448951125144958},
      {8.940696716308594e-08, 0.7071067690849304, 0.7071065902709961},
      {0.13794969022274017, 0.7071067690849304, 0.6935198903083801},
      {0.0, 0.5555702447891235, 0.8314695954322815},
      {0.16221167147159576, 0.5555702447891235, 0.815493106842041},
      {5.960464477539063e-08, 0.3826834559440613, 0.9238790273666382},
      {0.1802399456501007, 0.3826834559440613, 0.906127393245697},
      {0.0, 0.19509032368659973, 0.9807852506637573},
      {0.19134171307086945, 0.19509032368659973, 0.9619396924972534},
      {0.0, 0.0, 1.0},
      {0.19509032368659973, 0.0, 0.9807852506637573},
      {1.4901161193847656e-08, 0.9807852506637573, 0.19509010016918182},
      {0.0, 1.0, 0.0},
      {0.03806023299694061, 0.9807852506637573, 0.19134171307086945},
      {0.07465782761573792, 0.9807852506637573, 0.1802399456501007},
      {0.1464466154575348, 0.9238795042037964, 0.3535534143447876},
      {0.21260753273963928, 0.8314695954322815, 0.513279914855957},
      {0.27059805393218994, 0.7071067690849304, 0.6532814502716064},
      {0.3181896209716797, 0.5555702447891235, 0.7681776285171509},
      {0.3535533547401428, 0.3826834559440613, 0.8535533547401428},
      {0.37533026933670044, 0.19509032368659973, 0.906127393245697},
      {0.3826834261417389, 0.0, 0.9238794445991516},
      {0.4619396924972534, 0.5555702447891235, 0.6913415789604187},
      {0.513279914855957, 0.3826834559440613, 0.7681776881217957},
      {0.5448951125144958, 0.19509032368659973, 0.815493106842041},
      {0.5555702447891235, 0.0, 0.8314694762229919},
      {0.10838636755943298, 0.9807852506637573, 0.16221165657043457},
      {0.21260753273963928, 0.9238795042037964, 0.3181896507740021},
      {0.30865827202796936, 0.8314695954322815, 0.4619396924972534},
      {0.39284747838974, 0.7071067690849304, 0.5879377722740173},
      {0.27059805393218994, 0.9238795042037964, 0.27059802412986755},
      {0.3928474485874176, 0.8314695954322815, 0.3928473889827728},
      {0.5, 0.7071067690849304, 0.5},
      {0.5879377126693726, 0.5555702447891235, 0.5879376530647278},
      {0.6532813906669617, 0.3826834559440613, 0.6532814502716064},
      {0.6935198903083801, 0.19509032368659973, 0.6935198307037354},
      {0.7071067690849304, 0.0, 0.7071065902709961},
      {0.13794967532157898, 0.9807852506637573, 0.13794966042041779},
      {0.7681776285171509, 0.3826834559440613, 0.5132799744606018},
      {0.815493106842041, 0.19509032368659973, 0.5448949933052063},
      {0.8314695358276367, 0.0, 0.5555700063705444},
      {0.16221165657043457, 0.9807852506637573, 0.10838635265827179},
      {0.3181896507740021, 0.9238795042037964, 0.2126075029373169},
      {0.4619397222995758, 0.8314695954322815, 0.3086582124233246},
      {0.5879377722740173, 0.7071067690849304, 0.39284747838974},
      {0.6913416385650635, 0.5555702447891235, 0.46193963289260864},
      {0.3535533547401428, 0.9238795042037964, 0.1464465856552124},
      {0.513279914855957, 0.8314695954322815, 0.2126074582338333},
      {0.6532814502716064, 0.7071067690849304, 0.27059805393218994},
      {0.7681776285171509, 0.5555702447891235, 0.31818950176239014},
      {0.853553295135498, 0.3826834559440613, 0.3535534143447876},
      {0.9061273336410522, 0.19509032368659973, 0.3753301501274109},
      {0.9238793849945068, 0.0, 0.3826832175254822},
      {0.18023991584777832, 0.9807852506637573, 0.07465781271457672},
      {0.9061273336410522, 0.3826834559440613, 0.1802399903535843},
      {0.9619396328926086, 0.19509032368659973, 0.1913416087627411},
      {0.980785071849823, 0.0, 0.1950901299715042},
      {0.19134166836738586, 0.9807852506637573, 0.03806021437048912},
      {0.37533023953437805, 0.9238795042037964, 0.07465781271457672},
      {0.5448950529098511, 0.8314695954322815, 0.1083863154053688},
      {0.6935198903083801, 0.7071067690849304, 0.13794970512390137},
      {0.8154929876327515, 0.5555702447891235, 0.1622115671634674},
      {0.555570125579834, 0.8314695954322815, -5.21540641784668e-08},
      {0.7071067094802856, 0.7071067690849304, 1.4901161193847656e-08},
      {0.8314694166183472, 0.5555702447891235, -8.940696716308594e-08},
      {0.9238794445991516, 0.3826834559440613, 4.470348358154297e-08},
      {0.9807851314544678, 0.19509032368659973, -8.940696716308594e-08},
      {0.9999997019767761, 0.0, -1.6391277313232422e-07},
      {0.19509026408195496, 0.9807852506637573, -1.1175870895385742e-08},
      {0.3826833963394165, 0.9238795042037964, -2.2351741790771484e-08},
      {0.9619395732879639, 0.19509032368659973, -0.19134177267551422},
      {0.9807848930358887, 0.0, -0.1950904279947281},
      {0.19134165346622467, 0.9807852506637573, -0.03806023299694061},
      {0.37533023953437805, 0.9238795042037964, -0.0746578499674797},
      {0.5448949933052063, 0.8314695954322815, -0.10838640481233597},
      {0.6935198307037354, 0.7071067690849304, -0.13794966042041779},
      {0.8154929280281067, 0.5555702447891235, -0.16221173107624054},
      {0.9061273336410522, 0.3826834559440613, -0.18023990094661713},
      {0.5132797956466675, 0.8314695954322815, -0.21260753273963928},
      {0.6532813906669617, 0.7071067690849304, -0.27059799432754517},
      {0.7681775093078613, 0.5555702447891235, -0.3181896507740021},
      {0.853553295135498, 0.3826834559440613, -0.35355329513549805},
      {0.9061272144317627, 0.19509032368659973, -0.3753302991390228},
      {0.923879086971283, 0.0, -0.3826834559440613},
      {0.18023988604545593, 0.9807852506637573, -0.07465782016515732},
      {0.3535533547401428, 0.9238795042037964, -0.1464466154575348},
      {0.8154929280281067, 0.19509032368659973, -0.5448950529098511},
      {0.8314691185951233, 0.0, -0.5555701851844788},
      {0.1622115969657898, 0.9807852506637573, -0.1083863377571106},
      {0.3181895911693573, 0.9238795042037964, -0.2126075178384781},
      {0.46193957328796387, 0.8314695954322815, -0.308658242225647},
      {0.5879377126693726, 0.7071067690849304, -0.3928474187850952},
      {0.6913414597511292, 0.5555702447891235, -0.4619396924972534},
      {0.7681776285171509, 0.3826834559440613, -0.5132798552513123},
      {0.4999999403953552, 0.7071067690849304, -0.4999999403953552},
      {0.5879375338554382, 0.5555702447891235, -0.5879376530647278},
      {0.6532813906669617, 0.3826834559440613, -0.6532813310623169},
      {0.6935197114944458, 0.19509032368659973, -0.6935198307037354},
      {0.7071062326431274, 0.0, -0.7071066498756409},
      {0.1379496157169342, 0.9807852506637573, -0.1379496306180954},
      {0.2705979645252228, 0.9238795042037964, -0.27059802412986755},
      {0.3928472697734833, 0.8314695954322815, -0.3928474187850952},
      {0.1083863154053688, 0.9807852506637573, -0.1622115969657898},
      {0.21260744333267212, 0.9238795042037964, -0.3181896209716797},
      {0.30865809321403503, 0.8314695954322815, -0.46193966269493103},
      {0.3928474187850952, 0.7071067690849304, -0.5879377126693726},
      {0.4619395434856415, 0.5555702447891235, -0.6913415193557739},
      {0.513279914855957, 0.3826834559440613, -0.7681775689125061},
      {0.5448948740959167, 0.19509032368659973, -0.8154929876327515},
      {0.5555697083473206, 0.0, -0.8314693570137024},
      {0.31818944215774536, 0.5555702447891235, -0.7681775093078613},
      {0.3535533547401428, 0.3826834559440613, -0.8535531759262085},
      {0.37533003091812134, 0.19509032368659973, -0.9061272144317627},
      {0.3826829493045807, 0.0, -0.9238791465759277},
      {0.07465778291225433, 0.9807852506637573, -0.18023985624313354},
      {0.14644652605056763, 0.9238795042037964, -0.35355332493782043},
      {0.21260735392570496, 0.8314695954322815, -0.5132797956466675},
      {0.27059799432754517, 0.7071067690849304, -0.6532813906669617},
      {0.038060203194618225, 0.9807852506637573, -0.1913415938615799},
      {0.07465776056051254, 0.9238795042037964, -0.3753301799297333},
      {0.10838623344898224, 0.8314695954322815, -0.5448948740959167},
      {0.13794966042041779, 0.7071067690849304, -0.6935198307037354},
      {0.16221152245998383, 0.5555702447891235, -0.8154928684234619},
      {0.1802399456501007, 0.3826834559440613, -0.9061272144317627},
      {0.19134151935577393, 0.19509032368659973, -0.9619394540786743},
      {0.1950899064540863, 0.0, -0.9807847738265991},
      {-1.043081283569336e-07, 0.5555702447891235, -0.8314692974090576},
      {2.9802322387695312e-08, 0.3826834559440613, -0.9238792657852173},
      {-1.341104507446289e-07, 0.19509032368659973, -0.9807849526405334},
      {-3.2782554626464844e-07, 0.0, -0.9999993443489075},
      {-7.450580596923828e-09, 0.9807852506637573, -0.195090189576149},
      {-5.21540641784668e-08, 0.9238795042037964, -0.38268333673477173},
      {-9.685754776000977e-08, 0.8314695954322815, -0.5555699467658997},
      {-1.4901161193847656e-08, 0.7071067690849304, -0.7071066498756409},
      {-0.0746578648686409, 0.9238795042037964, -0.3753301799297333},
      {-0.10838641971349716, 0.8314695954322815, -0.544894814491272},
      {-0.13794967532157898, 0.7071067690849304, -0.6935197710990906},
      {-0.16221171617507935, 0.5555702447891235, -0.8154928088188171},
      {-0.18023987114429474, 0.3826834559440613, -0.9061271548271179},
      {-0.19134178757667542, 0.19509032368659973, -0.9619393944740295},
      {-0.19509051740169525, 0.0, -0.98078453540802},
      {-0.03806021437048912, 0.9807852506637573, -0.1913415789604187},
      {-0.35355323553085327, 0.3826834559440613, -0.8535531163215637},
      {-0.37533026933670044, 0.19509032368659973, -0.9061270356178284},
      {-0.38268348574638367, 0.0, -0.9238787293434143},
      {-0.07465778291225433, 0.9807852506637573, -0.18023982644081116},
      {-0.1464466154575348, 0.9238795042037964, -0.35355329513549805},
      {-0.2126075029373169, 0.8314695954322815, -0.5132796168327332},
      {-0.27059799432754517, 0.7071067690849304, -0.6532813310623169},
      {-0.3181896209716797, 0.5555702447891235, -0.7681773900985718},
      {-0.2126075029373169, 0.9238795042037964, -0.3181895315647125},
      {-0.3086581826210022, 0.8314695954322815, -0.46193939447402954},
      {-0.3928474187850952, 0.7071067690849304, -0.5879376530647278},
      {-0.46193963289260864, 0.5555702447891235, -0.6913413405418396},
      {-0.5132797360420227, 0.3826834559440613, -0.7681775093078613},
      {-0.5448950529098511, 0.19509032368659973, -0.8154927492141724},
      {-0.555570125579834, 0.0, -0.8314687609672546},
      {-0.10838630050420761, 0.9807852506637573, -0.1622115522623062},
      {-0.6532812118530273, 0.3826834559440613, -0.6532812714576721},
      {-0.6935197710990906, 0.19509032368659973, -0.6935195326805115},
      {-0.7071064710617065, 0.0, -0.7071059346199036},
      {-0.13794958591461182, 0.9807852506637573, -0.13794957101345062},
      {-0.27059799432754517, 0.9238795042037964, -0.2705979347229004},
      {-0.39284729957580566, 0.8314695954322815, -0.39284712076187134},
      {-0.49999991059303284, 0.7071067690849304, -0.49999988079071045},
      {-0.587937593460083, 0.5555702447891235, -0.5879374146461487},
      {-0.4619395136833191, 0.8314695954322815, -0.3086579442024231},
      {-0.5879376530647278, 0.7071067690849304, -0.39284735918045044},
      {-0.6913414597511292, 0.5555702447891235, -0.46193942427635193},
      {-0.7681774497032166, 0.3826834559440613, -0.5132797956466675},
      {-0.8154929280281067, 0.19509032368659973, -0.5448946952819824},
      {-0.8314691185951233, 0.0, -0.5555694103240967},
      {-0.1622115522623062, 0.9807852506637573, -0.10838627815246582},
      {-0.3181895613670349, 0.9238795042037964, -0.21260741353034973},
      {-0.9061271548271179, 0.19509032368659973, -0.3753298819065094},
      {-0.9238788485527039, 0.0, -0.3826826810836792},
      {-0.18023981153964996, 0.9807852506637573, -0.07465775310993195},
      {-0.35355326533317566, 0.9238795042037964, -0.14644651114940643},
      {-0.5132796168327332, 0.8314695954322815, -0.2126072347164154},
      {-0.6532813310623169, 0.7071067690849304, -0.2705979645252228},
      {-0.7681773900985718, 0.5555702447891235, -0.3181893229484558},
      {-0.853553056716919, 0.3826834559440613, -0.35355326533317566},
      {-0.6935197710990906, 0.7071067690849304, -0.1379496306180954},
      {-0.8154927492141724, 0.5555702447891235, -0.16221143305301666},
      {-0.9061270952224731, 0.3826834559440613, -0.18023988604545593},
      {-0.9619393944740295, 0.19509032368659973, -0.19134138524532318},
      {-0.9807844161987305, 0.0, -0.1950896978378296},
      {-0.1913415491580963, 0.9807852506637573, -0.038060180842876434},
      {-0.3753301203250885, 0.9238795042037964, -0.07465775310993195},
      {-0.5448946952819824, 0.8314695954322815, -0.10838615149259567},
      {-0.1950901448726654, 0.9807852506637573, 1.862645149230957e-08},
      {-0.38268324732780457, 0.9238795042037964, 5.21540641784668e-08},
      {-0.5555697679519653, 0.8314695954322815, 1.4901161193847656e-07},
      {-0.7071065902709961, 0.7071067690849304, 2.9802322387695312e-08},
      {-0.8314691781997681, 0.5555702447891235, 1.6391277313232422e-07},
      {-0.9238791465759277, 0.3826834559440613, 1.4901161193847656e-08},
      {-0.9807848334312439, 0.19509032368659973, 2.682209014892578e-07},
      {-0.9999990463256836, 0.0, 4.470348358154297e-07},
      {-0.6935197114944458, 0.7071067690849304, 0.13794969022274017},
      {-0.8154926300048828, 0.5555702447891235, 0.16221176087856293},
      {-0.9061270356178284, 0.3826834559440613, 0.18023990094661713},
      {-0.9619392156600952, 0.19509032368659973, 0.19134189188480377},
      {-0.9807842373847961, 0.0, 0.19509057700634003},
      {-0.19134153425693512, 0.9807852506637573, 0.03806021809577942},
      {-0.3753300905227661, 0.9238795042037964, 0.0746578499674797},
      {-0.5448946356773376, 0.8314695954322815, 0.10838643461465836},
      {-0.18023978173732758, 0.9807852506637573, 0.07465778291225433},
      {-0.3535532057285309, 0.9238795042037964, 0.1464465856552124},
      {-0.5132794380187988, 0.8314695954322815, 0.2126074880361557},
      {-0.6532812714576721, 0.7071067690849304, 0.27059799432754517},
      {-0.7681772112846375, 0.5555702447891235, 0.3181896209716797},
      {-0.8535529971122742, 0.3826834559440613, 0.35355323553085327},
      {-0.906126856803894, 0.19509032368659973, 0.3753303289413452},
      {-0.9238784313201904, 0.0, 0.38268348574638367},
      {-0.6913411617279053, 0.5555702447891235, 0.46193963289260864},
      {-0.7681773900985718, 0.3826834559440613, 0.5132797360420227},
      {-0.815492570400238, 0.19509032368659973, 0.5448950529098511},
      {-0.8314684629440308, 0.0, 0.5555700659751892},
      {-0.16221150755882263, 0.9807852506637573, 0.10838629305362701},
      {-0.31818944215774536, 0.9238795042037964, 0.2126074582338333},
      {-0.4619392156600952, 0.8314695954322815, 0.3086581528186798},
      {-0.587937593460083, 0.7071067690849304, 0.3928473889827728},
      {-0.13794954121112823, 0.9807852506637573, 0.13794957101345062},
      {-0.2705978751182556, 0.9238795042037964, 0.2705979347229004},
      {-0.392846941947937, 0.8314695954322815, 0.3928472399711609},
      {-0.4999998211860657, 0.7071067690849304, 0.49999988079071045},
      {-0.5879372358322144, 0.5555702447891235, 0.5879375338554382},
      {-0.6532811522483826, 0.3826834559440613, 0.6532811522483826},
      {-0.6935193538665771, 0.19509032368659973, 0.6935197114944458},
      {-0.7071056962013245, 0.0, 0.707106351852417},
      {-0.46193927526474, 0.5555702447891235, 0.6913413405418396},
      {-0.5132796764373779, 0.3826834559440613, 0.7681773900985718},
      {-0.5448945760726929, 0.19509032368659973, 0.8154928088188171},
      {-0.5555692315101624, 0.0, 0.831468939781189},
      {-0.10838624835014343, 0.9807852506637573, 0.16221152245998383},
      {-0.21260736882686615, 0.9238795042037964, 0.31818950176239014},
      {-0.30865779519081116, 0.8314695954322815, 0.46193942427635193},
      {-0.39284729957580566, 0.7071067690849304, 0.5879376530647278},
      {-0.14644648134708405, 0.9238795042037964, 0.35355323553085327},
      {-0.21260710060596466, 0.8314695954322815, 0.5132794976234436},
      {-0.270597904920578, 0.7071067690849304, 0.6532813310623169},
      {-0.31818920373916626, 0.5555702447891235, 0.7681772708892822},
      {-0.3535531759262085, 0.3826834559440613, 0.8535529971122742},
      {-0.37532979249954224, 0.19509032368659973, 0.9061269760131836},
      {-0.38268256187438965, 0.0, 0.9238786101341248},
      {-0.07465773820877075, 0.9807852506637573, 0.18023976683616638},
      {-0.18023981153964996, 0.3826834559440613, 0.9061269760131836},
      {-0.1913413256406784, 0.19509032368659973, 0.9619392156600952},
      {-0.19508962333202362, 0.0, 0.9807841777801514},
      {-0.038060177117586136, 0.9807852506637573, 0.19134150445461273},
      {-0.07465773075819016, 0.9238795042037964, 0.3753300905227661},
      {-0.10838603973388672, 0.8314695954322815, 0.5448945164680481},
      {-0.13794957101345062, 0.7071067690849304, 0.6935197710990906},
      {-0.1622113287448883, 0.5555702447891235, 0.815492570400238},
   }};

   alignas(gpu::raw_uav_srv_byte_alignment)
      const std::array<std::array<uint16, 3>, 510> hemisphere_indices = {{
         {2, 1, 0},       {3, 2, 0},       {3, 0, 4},       {5, 3, 4},
         {5, 4, 6},       {7, 5, 6},       {7, 6, 8},       {9, 7, 8},
         {9, 8, 10},      {11, 9, 10},     {11, 10, 12},    {13, 11, 12},
         {16, 15, 14},    {16, 14, 1},     {2, 16, 1},      {17, 16, 2},
         {18, 17, 2},     {18, 2, 3},      {19, 18, 3},     {19, 3, 5},
         {20, 19, 5},     {20, 5, 7},      {21, 20, 7},     {21, 7, 9},
         {22, 21, 9},     {22, 9, 11},     {23, 22, 11},    {23, 11, 13},
         {24, 23, 13},    {17, 15, 16},    {25, 21, 22},    {26, 25, 22},
         {26, 22, 23},    {27, 26, 23},    {27, 23, 24},    {28, 27, 24},
         {29, 15, 17},    {29, 17, 18},    {30, 29, 18},    {30, 18, 19},
         {31, 30, 19},    {31, 19, 20},    {32, 31, 20},    {32, 20, 21},
         {25, 32, 21},    {33, 30, 31},    {34, 33, 31},    {34, 31, 32},
         {35, 34, 32},    {35, 32, 25},    {36, 35, 25},    {36, 25, 26},
         {37, 36, 26},    {37, 26, 27},    {38, 37, 27},    {28, 39, 38},
         {27, 28, 38},    {40, 15, 29},    {40, 29, 30},    {33, 40, 30},
         {41, 37, 38},    {42, 41, 38},    {42, 38, 39},    {43, 42, 39},
         {44, 15, 40},    {44, 40, 33},    {45, 44, 33},    {45, 33, 34},
         {46, 45, 34},    {46, 34, 35},    {47, 46, 35},    {47, 35, 36},
         {48, 47, 36},    {48, 36, 37},    {41, 48, 37},    {49, 45, 46},
         {50, 49, 46},    {50, 46, 47},    {51, 50, 47},    {51, 47, 48},
         {52, 51, 48},    {52, 48, 41},    {53, 52, 41},    {53, 41, 42},
         {54, 53, 42},    {54, 42, 43},    {55, 54, 43},    {56, 15, 44},
         {56, 44, 45},    {49, 56, 45},    {57, 53, 54},    {58, 57, 54},
         {58, 54, 55},    {59, 58, 55},    {60, 15, 56},    {60, 56, 49},
         {61, 60, 49},    {61, 49, 50},    {62, 61, 50},    {62, 50, 51},
         {63, 62, 51},    {63, 51, 52},    {64, 63, 52},    {64, 52, 53},
         {57, 64, 53},    {65, 62, 63},    {66, 65, 63},    {66, 63, 64},
         {67, 66, 64},    {67, 64, 57},    {68, 67, 57},    {68, 57, 58},
         {69, 68, 58},    {69, 58, 59},    {70, 69, 59},    {71, 15, 60},
         {71, 60, 61},    {72, 71, 61},    {72, 61, 62},    {65, 72, 62},
         {73, 69, 70},    {74, 73, 70},    {75, 15, 71},    {75, 71, 72},
         {76, 75, 72},    {76, 72, 65},    {77, 76, 65},    {77, 65, 66},
         {78, 77, 66},    {78, 66, 67},    {79, 78, 67},    {79, 67, 68},
         {80, 79, 68},    {80, 68, 69},    {73, 80, 69},    {81, 77, 78},
         {82, 81, 78},    {82, 78, 79},    {83, 82, 79},    {83, 79, 80},
         {84, 83, 80},    {84, 80, 73},    {85, 84, 73},    {85, 73, 74},
         {86, 85, 74},    {87, 15, 75},    {87, 75, 76},    {88, 87, 76},
         {88, 76, 77},    {81, 88, 77},    {89, 85, 86},    {90, 89, 86},
         {91, 15, 87},    {91, 87, 88},    {92, 91, 88},    {92, 88, 81},
         {93, 92, 81},    {93, 81, 82},    {94, 93, 82},    {94, 82, 83},
         {95, 94, 83},    {95, 83, 84},    {96, 95, 84},    {96, 84, 85},
         {89, 96, 85},    {97, 94, 95},    {98, 97, 95},    {98, 95, 96},
         {99, 98, 96},    {99, 96, 89},    {100, 99, 89},   {100, 89, 90},
         {101, 100, 90},  {102, 15, 91},   {102, 91, 92},   {103, 102, 92},
         {103, 92, 93},   {104, 103, 93},  {104, 93, 94},   {97, 104, 94},
         {105, 102, 103}, {106, 105, 103}, {106, 103, 104}, {107, 106, 104},
         {107, 104, 97},  {108, 107, 97},  {108, 97, 98},   {109, 108, 98},
         {109, 98, 99},   {110, 109, 99},  {110, 99, 100},  {111, 110, 100},
         {111, 100, 101}, {112, 111, 101}, {105, 15, 102},  {113, 109, 110},
         {114, 113, 110}, {114, 110, 111}, {115, 114, 111}, {115, 111, 112},
         {116, 115, 112}, {117, 15, 105},  {117, 105, 106}, {118, 117, 106},
         {118, 106, 107}, {119, 118, 107}, {119, 107, 108}, {120, 119, 108},
         {120, 108, 109}, {113, 120, 109}, {121, 117, 118}, {122, 121, 118},
         {122, 118, 119}, {123, 122, 119}, {123, 119, 120}, {124, 123, 120},
         {124, 120, 113}, {125, 124, 113}, {125, 113, 114}, {126, 125, 114},
         {126, 114, 115}, {127, 126, 115}, {127, 115, 116}, {128, 127, 116},
         {121, 15, 117},  {129, 125, 126}, {130, 129, 126}, {130, 126, 127},
         {131, 130, 127}, {131, 127, 128}, {132, 131, 128}, {133, 15, 121},
         {133, 121, 122}, {134, 133, 122}, {134, 122, 123}, {135, 134, 123},
         {135, 123, 124}, {136, 135, 124}, {136, 124, 125}, {129, 136, 125},
         {137, 134, 135}, {138, 137, 135}, {138, 135, 136}, {139, 138, 136},
         {139, 136, 129}, {140, 139, 129}, {140, 129, 130}, {141, 140, 130},
         {141, 130, 131}, {142, 141, 131}, {142, 131, 132}, {143, 142, 132},
         {144, 15, 133},  {144, 133, 134}, {137, 144, 134}, {145, 141, 142},
         {146, 145, 142}, {146, 142, 143}, {147, 146, 143}, {148, 15, 144},
         {148, 144, 137}, {149, 148, 137}, {149, 137, 138}, {150, 149, 138},
         {150, 138, 139}, {151, 150, 139}, {151, 139, 140}, {152, 151, 140},
         {152, 140, 141}, {145, 152, 141}, {153, 149, 150}, {154, 153, 150},
         {154, 150, 151}, {155, 154, 151}, {155, 151, 152}, {156, 155, 152},
         {156, 152, 145}, {157, 156, 145}, {157, 145, 146}, {158, 157, 146},
         {158, 146, 147}, {159, 158, 147}, {160, 15, 148},  {160, 148, 149},
         {153, 160, 149}, {161, 157, 158}, {162, 161, 158}, {162, 158, 159},
         {163, 162, 159}, {164, 15, 160},  {164, 160, 153}, {165, 164, 153},
         {165, 153, 154}, {166, 165, 154}, {166, 154, 155}, {167, 166, 155},
         {167, 155, 156}, {168, 167, 156}, {168, 156, 157}, {161, 168, 157},
         {169, 166, 167}, {170, 169, 167}, {170, 167, 168}, {171, 170, 168},
         {171, 168, 161}, {172, 171, 161}, {172, 161, 162}, {173, 172, 162},
         {173, 162, 163}, {174, 173, 163}, {175, 15, 164},  {175, 164, 165},
         {176, 175, 165}, {176, 165, 166}, {169, 176, 166}, {177, 173, 174},
         {178, 177, 174}, {179, 15, 175},  {179, 175, 176}, {180, 179, 176},
         {180, 176, 169}, {181, 180, 169}, {181, 169, 170}, {182, 181, 170},
         {182, 170, 171}, {183, 182, 171}, {183, 171, 172}, {184, 183, 172},
         {184, 172, 173}, {177, 184, 173}, {185, 182, 183}, {186, 185, 183},
         {186, 183, 184}, {187, 186, 184}, {187, 184, 177}, {188, 187, 177},
         {188, 177, 178}, {189, 188, 178}, {190, 15, 179},  {190, 179, 180},
         {191, 190, 180}, {191, 180, 181}, {192, 191, 181}, {192, 181, 182},
         {185, 192, 182}, {193, 15, 190},  {193, 190, 191}, {194, 193, 191},
         {194, 191, 192}, {195, 194, 192}, {195, 192, 185}, {196, 195, 185},
         {196, 185, 186}, {197, 196, 186}, {197, 186, 187}, {198, 197, 187},
         {198, 187, 188}, {199, 198, 188}, {199, 188, 189}, {200, 199, 189},
         {201, 196, 197}, {202, 201, 197}, {202, 197, 198}, {203, 202, 198},
         {203, 198, 199}, {204, 203, 199}, {204, 199, 200}, {205, 204, 200},
         {206, 15, 193},  {206, 193, 194}, {207, 206, 194}, {207, 194, 195},
         {208, 207, 195}, {208, 195, 196}, {201, 208, 196}, {209, 206, 207},
         {210, 209, 207}, {210, 207, 208}, {211, 210, 208}, {211, 208, 201},
         {212, 211, 201}, {212, 201, 202}, {213, 212, 202}, {213, 202, 203},
         {214, 213, 203}, {214, 203, 204}, {215, 214, 204}, {215, 204, 205},
         {216, 215, 205}, {209, 15, 206},  {217, 213, 214}, {218, 217, 214},
         {218, 214, 215}, {219, 218, 215}, {219, 215, 216}, {220, 219, 216},
         {221, 15, 209},  {221, 209, 210}, {222, 221, 210}, {222, 210, 211},
         {223, 222, 211}, {223, 211, 212}, {224, 223, 212}, {224, 212, 213},
         {217, 224, 213}, {225, 221, 222}, {226, 225, 222}, {226, 222, 223},
         {227, 226, 223}, {227, 223, 224}, {228, 227, 224}, {228, 224, 217},
         {229, 228, 217}, {229, 217, 218}, {230, 229, 218}, {230, 218, 219},
         {231, 230, 219}, {231, 219, 220}, {232, 231, 220}, {225, 15, 221},
         {233, 229, 230}, {234, 233, 230}, {234, 230, 231}, {235, 234, 231},
         {235, 231, 232}, {236, 235, 232}, {237, 15, 225},  {237, 225, 226},
         {238, 237, 226}, {238, 226, 227}, {239, 238, 227}, {239, 227, 228},
         {240, 239, 228}, {240, 228, 229}, {233, 240, 229}, {241, 238, 239},
         {242, 241, 239}, {242, 239, 240}, {243, 242, 240}, {243, 240, 233},
         {244, 243, 233}, {244, 233, 234}, {245, 244, 234}, {245, 234, 235},
         {246, 245, 235}, {246, 235, 236}, {247, 246, 236}, {248, 15, 237},
         {248, 237, 238}, {241, 248, 238}, {249, 245, 246}, {250, 249, 246},
         {250, 246, 247}, {251, 250, 247}, {252, 15, 248},  {252, 248, 241},
         {253, 252, 241}, {253, 241, 242}, {254, 253, 242}, {254, 242, 243},
         {255, 254, 243}, {255, 243, 244}, {256, 255, 244}, {256, 244, 245},
         {249, 256, 245}, {0, 254, 255},   {4, 0, 255},     {4, 255, 256},
         {6, 4, 256},     {6, 256, 249},   {8, 6, 249},     {8, 249, 250},
         {10, 8, 250},    {10, 250, 251},  {12, 10, 251},   {14, 15, 252},
         {14, 252, 253},  {1, 14, 253},    {1, 253, 254},   {0, 1, 254},
         {13, 12, 251},   {28, 24, 13},    {43, 39, 28},    {59, 55, 43},
         {74, 70, 59},    {90, 86, 74},    {112, 101, 90},  {128, 116, 112},
         {143, 132, 128}, {159, 147, 143}, {174, 163, 159}, {189, 178, 174},
         {205, 200, 189}, {220, 216, 205}, {236, 232, 220}, {251, 247, 236},
         {28, 13, 251},   {59, 43, 28},    {90, 74, 59},    {128, 112, 90},
         {159, 143, 128}, {189, 174, 159}, {220, 205, 189}, {251, 236, 220},
         {59, 28, 251},   {128, 90, 59},   {189, 159, 128}, {251, 220, 189},
         {128, 59, 251},  {251, 189, 128},
      }};
};

constexpr geometric_shapes_buffer shapes_buffer;

}

geometric_shapes::geometric_shapes(gpu::device& device,
                                   copy_command_list_pool& copy_command_list_pool)
{
   init_gpu_buffer(device, copy_command_list_pool);
   init_shapes(device);
}

void geometric_shapes::init_gpu_buffer(gpu::device& device,
                                       copy_command_list_pool& copy_command_list_pool)
{
   pooled_copy_command_list command_list = copy_command_list_pool.aquire_and_reset();

   _gpu_buffer = {device.create_buffer({.size = sizeof(shapes_buffer),
                                        .debug_name =
                                           "Geometric Shapes Meshes Buffer"},
                                       gpu::heap_type::default_),
                  device};

   gpu::unique_resource_handle upload_buffer =
      {device.create_buffer({.size = sizeof(shapes_buffer),
                             .debug_name =
                                "Geometric Shapes Meshes Upload Buffer"},
                            gpu::heap_type::upload),
       device};

   std::byte* const upload_buffer_ptr =
      static_cast<std::byte*>(device.map(upload_buffer.get(), 0, {0, 0}));

   std::memcpy(upload_buffer_ptr, &shapes_buffer, sizeof(shapes_buffer));

   device.unmap(upload_buffer.get(), 0, {0, sizeof(shapes_buffer)});

   command_list->copy_resource(_gpu_buffer.get(), upload_buffer.get());

   command_list->close();

   device.background_copy_queue.execute_command_lists(command_list.get());
}

void geometric_shapes::init_shapes(gpu::device& device)
{
   const gpu_virtual_address gpu_address =
      device.get_gpu_virtual_address(_gpu_buffer.get());

   _icosphere =
      {.index_count = static_cast<uint32>(shapes_buffer.icosphere_indices.size()) * 3,
       .index_buffer_view =
          {
             .buffer_location =
                gpu_address + offsetof(geometric_shapes_buffer, icosphere_indices),
             .size_in_bytes = sizeof(geometric_shapes_buffer::icosphere_indices),
          },
       .position_vertex_buffer_view = {
          .buffer_location =
             gpu_address + offsetof(geometric_shapes_buffer, icosphere_vertices),
          .size_in_bytes = sizeof(geometric_shapes_buffer::icosphere_vertices),
          .stride_in_bytes = sizeof(float3),
       }};

   _cylinder = {
      .index_count = static_cast<uint32>(shapes_buffer.cylinder_indices.size()) * 3,
      .index_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, cylinder_indices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::cylinder_indices),
         },
      .position_vertex_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, cylinder_vertices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::cylinder_vertices),
            .stride_in_bytes = sizeof(float3),
         },
   };

   _alt_cylinder = {
      .index_count = static_cast<uint32>(shapes_buffer.alt_cylinder_indices.size()) * 3,
      .index_buffer_view =
         {
            .buffer_location = gpu_address + offsetof(geometric_shapes_buffer,
                                                      alt_cylinder_indices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::alt_cylinder_indices),
         },
      .position_vertex_buffer_view =
         {
            .buffer_location = gpu_address + offsetof(geometric_shapes_buffer,
                                                      alt_cylinder_vertices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::alt_cylinder_vertices),
            .stride_in_bytes = sizeof(float3),
         },
   };

   _cube = {
      .index_count = static_cast<uint32>(shapes_buffer.cube_indices.size()) * 3,
      .index_buffer_view =
         {
            .buffer_location = gpu_address + offsetof(geometric_shapes_buffer, cube_indices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::cube_indices),
         },
      .position_vertex_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, cube_vertices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::cube_vertices),
            .stride_in_bytes = sizeof(float3),
         },
   };

   _octahedron = {
      .index_count = static_cast<uint32>(shapes_buffer.octahedron_indices.size()) * 3,
      .index_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, octahedron_indices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::octahedron_indices),
         },
      .position_vertex_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, octahedron_vertices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::octahedron_vertices),
            .stride_in_bytes = sizeof(float3),
         },
   };

   _hint_hexahedron = {
      .index_count =
         static_cast<uint32>(shapes_buffer.hint_hexahedron_indices.size()) * 3,
      .index_buffer_view =
         {
            .buffer_location = gpu_address + offsetof(geometric_shapes_buffer,
                                                      hint_hexahedron_indices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::hint_hexahedron_indices),
         },
      .position_vertex_buffer_view =
         {
            .buffer_location = gpu_address + offsetof(geometric_shapes_buffer,
                                                      hint_hexahedron_vertices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::hint_hexahedron_vertices),
            .stride_in_bytes = sizeof(float3),
         },
   };

   _cone = {
      .index_count = static_cast<uint32>(shapes_buffer.cone_indices.size()) * 3,
      .index_buffer_view =
         {
            .buffer_location = gpu_address + offsetof(geometric_shapes_buffer, cone_indices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::cone_indices),
         },
      .position_vertex_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, cone_vertices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::cone_vertices),
            .stride_in_bytes = sizeof(float3),
         },
   };

   _ramp = {
      .index_count = static_cast<uint32>(shapes_buffer.ramp_indices.size()) * 3,
      .index_buffer_view =
         {
            .buffer_location = gpu_address + offsetof(geometric_shapes_buffer, ramp_indices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::ramp_indices),
         },
      .position_vertex_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, ramp_vertices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::ramp_vertices),
            .stride_in_bytes = sizeof(float3),
         },
   };

   _hemisphere = {
      .index_count = static_cast<uint32>(shapes_buffer.hemisphere_indices.size()) * 3,
      .index_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, hemisphere_indices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::hemisphere_indices),
         },
      .position_vertex_buffer_view =
         {
            .buffer_location =
               gpu_address + offsetof(geometric_shapes_buffer, hemisphere_vertices),
            .size_in_bytes = sizeof(geometric_shapes_buffer::hemisphere_vertices),
            .stride_in_bytes = sizeof(float3),
         },
   };
}

}
